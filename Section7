#include <iostream>
#include <vector>

using namespace std;


int main() {

    //  Declare 2 Vectors, vector1 + vector2
    std::vector<int> vector1;
    std::vector<int> vector2;
    //  Add 10 and 20 to vector1 dynamically using push-back
    vector1.push_back(10);
    vector1.push_back(20);
    //  Display the elements in vector1 using the at() method as well as size()
    std::cout << "===Vector 1 ===" << "\n";
    for (int i = 0; i < vector1.size(); ++i) {
        std::cout << "Index: " << i << " Value: " << vector1.at(i) << "\n";
    }
    std::cout << "\n";
    //  Add 100 and 200 to vector2 using push_back()
    vector2.push_back(100);
    vector2.push_back(200);
    //  Display vector2 using at() as well as size()
    std::cout << "===Vector 2 ===" << "\n";
    for (int i = 0; i < vector2.size(); ++i) {
        std::cout << "Index: " << i << " Value: " << vector2.at(i) << "\n";
    }
    std::cout << "\n";
    //  Declare an empty 2d vector called vector_2d
    vector<vector<int>> vector_2d;
    //  Add vector1 to vector_2d using push_back()
    vector_2d.push_back(vector1);
    //  add vector2 to vector_2d using push_back()
    vector_2d.push_back(vector2);
    //  Display the elements in vector_2d using at()
    std::cout << "=== Vector_2d ===" << "\n";
    std::cout << vector_2d.at(0).at(0) << " " << vector_2d.at(0).at(1) << "\n";
    std::cout << vector_2d.at(1).at(0) << " " << vector_2d.at(1).at(1) << "\n";
    std::cout << "\n";
    //  Change vector1.at(0) to 1000
    vector1.at(0) = 1000;
    //  Display the elements in vector_2d again using the at() method
    std::cout << "=== Vector_2d Second View ===" << "\n";
    std::cout << vector_2d.at(0).at(0) << " " << vector_2d.at(0).at(1) << "\n";
    std::cout << vector_2d.at(1).at(0) << " " << vector_2d.at(1).at(1) << "\n";
    // I believe changing the vector didnt change our 2d vector because it wasn't pushed into the vector, the old copy of the vector is pushed into the vector.
    vector_2d.pop_back();
    vector_2d.pop_back();
    vector_2d.push_back(vector1);

    std::cout << "=== Vector_2d Third View ===" << "\n";
    std::cout << vector_2d.at(0).at(0) << " " << vector_2d.at(0).at(1) << "\n";

    //  Display the elements in vector1
    std::cout << "\n";
}
